version: "2"

services:
  web:
    restart: always
    build: ./src
    env_file:
      - .env
      - etc/envs/web
    volumes:
      - ./src:/app
      - ./volumes/web/logs:/logs
      - ./volumes/web/media:/media

  celery:
    restart: always
    build: ./src
    command: celery -A votem worker -l info -B
    env_file:
      - .env
      - ./etc/envs/web
    volumes:
      - ./src:/app
      - ./volumes/web/logs:/logs

  nginx:
    restart: always
    image: nginx:stable
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./etc/nginx-dev:/etc/nginx
      - ./volumes/frontend/:/data/frontend
      - ./volumes/api_static:/data/api
      - ./volumes/web/media:/data/media:ro
      - ./volumes/letsencrypt/www:/var/www/certbot:ro
      - ./volumes/letsencrypt/data:/etc/letsencrypt:ro

  postgres:
    restart: always
    image: postgres:10.0
    env_file: ./etc/envs/postgres
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data
      - ./volumes/postgres_initial:/docker-entrypoint-initdb.d

  rabbit:
    restart: always
    image: rabbitmq:alpine
    env_file: ./etc/envs/rabbitmq

  elasticsearch:
    restart: always
    image: elasticsearch:5.6.3
    env_file: "./etc/envs/elasticsearch-dev"
    volumes:
      - ./volumes/elasticsearch:/usr/share/elasticsearch/data